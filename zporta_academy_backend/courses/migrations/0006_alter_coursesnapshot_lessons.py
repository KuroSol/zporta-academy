# Generated by Django 5.1.6 on 2025-03-11 03:42

from django.db import migrations, models

def cleanup_snapshot_relationships(apps, schema_editor):
    if schema_editor.connection.vendor == 'sqlite':
        cursor = schema_editor.connection.cursor()
        # Disable foreign key constraints temporarily for SQLite
        cursor.execute("PRAGMA foreign_keys = OFF;")
        try:
            # Use "lesson_id" because the join table was created when the field pointed to lessons
            cursor.execute("""
                DELETE FROM courses_coursesnapshot_lessons
                WHERE lesson_id NOT IN (SELECT id FROM lessons_lessonsnapshot)
            """)
        finally:
            cursor.execute("PRAGMA foreign_keys = ON;")
    else:
        # For non-sqlite backends (e.g., MySQL), just run the DELETE statement without PRAGMA commands.
        cursor = schema_editor.connection.cursor()
        cursor.execute("""
            DELETE FROM courses_coursesnapshot_lessons
            WHERE lesson_id NOT IN (SELECT id FROM lessons_lessonsnapshot)
        """)

class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0005_coursesnapshot_lessons'),
        ('lessons', '0003_alter_lessoncompletion_lesson_lessonsnapshot_and_more'),
    ]

    operations = [
        migrations.RunPython(cleanup_snapshot_relationships),
        migrations.AlterField(
            model_name='coursesnapshot',
            name='lessons',
            field=models.ManyToManyField(blank=True, to='lessons.lessonsnapshot'),
        ),
    ]
