/* --- Theme Variables (Adapt these colors to your 'zporta' theme) --- */
:root {
    --zporta-primary-color: #3498db; /* Example: Blue */
    --zporta-primary-hover: #2980b9; /* Darker blue */
    --zporta-secondary-color: #2c3e50; /* Dark Text / Elements */
    --zporta-secondary-light: #34495e; /* Lighter Dark Text */
    --zporta-background-light: #ffffff;
    --zporta-background-medium: #f9f9f9;
    --zporta-border-color: #ccc;
    --zporta-border-light: #ddd;
    --zporta-success-color: #2ecc71;
    --zporta-error-color: #e74c3c;
    --zporta-text-light: #555;
    --zporta-required-color: #e74c3c;
    --zporta-attached-color: #7f8c8d; /* Grey for attached items */
    --zporta-font-family: 'Arial', sans-serif; /* Choose your platform font */
}

/* --- General Container & Page Styling --- */
.createCourseContainer {
    max-width: 1000px; /* Wider max-width for better desktop layout */
    margin: 30px auto;
    padding: 25px 30px;
    border-radius: 12px;
    background: var(--zporta-background-light);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    font-family: var(--zporta-font-family);
    border: 1px solid var(--zporta-border-light);
}

.createCourseContainer h2 {
    font-size: 26px;
    color: var(--zporta-secondary-color);
    text-align: center;
    margin-bottom: 25px;
    font-weight: 600;
}

/* --- Loading State --- */
.loading {
    text-align: center;
    padding: 50px;
    font-size: 18px;
    color: var(--zporta-secondary-light);
}

/* --- Message Styling --- */
.message {
    padding: 12px 15px;
    margin-bottom: 20px;
    border-radius: 6px;
    font-size: 14px;
    text-align: center;
    font-weight: 500;
}

.error {
    background-color: #fdecea; /* Lighter red background */
    color: var(--zporta-error-color);
    border: 1px solid var(--zporta-error-color);
}

.success {
    background-color: #eafaf1; /* Lighter green background */
    color: var(--zporta-success-color);
    border: 1px solid var(--zporta-success-color);
}

/* --- Form Structure --- */
.courseForm {
    display: flex;
    flex-direction: column;
    gap: 25px; /* Increased gap between sections */
}

.formSection {
    border: 1px solid var(--zporta-border-light);
    border-radius: 8px;
    padding: 20px;
    margin: 0; /* Reset default fieldset margin */
    background-color: var(--zporta-background-light); /* Slightly different bg possible */
}

.formSection legend {
    font-size: 18px;
    font-weight: 600;
    color: var(--zporta-secondary-color);
    padding: 0 10px;
    margin-left: 10px; /* Align with content */
}

.formGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Responsive grid */
    gap: 20px; /* Gap between grid items */
}

/* --- Form Elements --- */
.formGroup {
    display: flex;
    flex-direction: column;
    gap: 6px; /* Space between label and input */
}

.formGroup label {
    font-size: 14px;
    font-weight: bold;
    color: var(--zporta-secondary-light);
}

.required {
    color: var(--zporta-required-color);
    margin-left: 2px;
}

.formGroup input[type="text"],
.formGroup input[type="number"],
.formGroup input[type="email"], /* Add other input types if needed */
.formGroup select,
.formGroup textarea /* Style textarea if you add one */ {
    padding: 10px 12px;
    border: 1px solid var(--zporta-border-color);
    border-radius: 5px;
    font-size: 14px;
    color: var(--zporta-secondary-color);
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
    width: 100%; /* Ensure inputs fill grid column */
    box-sizing: border-box; /* Include padding/border in width */
}

.formGroup input:focus,
.formGroup select:focus,
.formGroup textarea:focus {
    border-color: var(--zporta-primary-color);
    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2); /* Subtle focus ring */
    outline: none;
}

.formGroup input::placeholder,
.formGroup textarea::placeholder {
    color: #aaa;
}

/* Radio Button Group */
.radioGroup {
    display: flex;
    gap: 20px;
    align-items: center;
    margin-top: 5px; /* Align with other inputs */
}

.radioLabel {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
    cursor: pointer;
    font-weight: normal; /* Override bold label style if needed */
    color: var(--zporta-text-light);
}

.radioLabel input[type="radio"] {
   accent-color: var(--zporta-primary-color); /* Modern way to style radios */
   cursor: pointer;
}

/* File Input Styling */
.fileInputButton {
    padding: 10px 15px;
    border: 1px solid var(--zporta-primary-color);
    background-color: var(--zporta-background-light);
    color: var(--zporta-primary-color);
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.3s ease, color 0.3s ease;
    display: inline-block; /* Allow width to fit content */
    width: auto; /* Override potential full width */
    margin-top: 5px; /* Space from label */
}

.fileInputButton:hover {
    background-color: var(--zporta-primary-color);
    color: var(--zporta-background-light);
}

.imagePreviewContainer {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-top: 10px;
    position: relative;
}

.imagePreview {
    max-width: 100px; /* Adjust size as needed */
    max-height: 60px;
    border-radius: 4px;
    border: 1px solid var(--zporta-border-light);
    object-fit: cover;
}

.fileName {
    font-size: 13px;
    color: var(--zporta-text-light);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 200px; /* Prevent long names breaking layout */
}

.clearImageButton {
    background: rgba(0, 0, 0, 0.5);
    color: white;
    border: none;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    font-size: 12px;
    line-height: 18px; /* Center the 'x' */
    text-align: center;
    cursor: pointer;
    position: absolute; /* Position over the preview */
    top: -5px;
    left: -5px;
    padding: 0;
}
.clearImageButton:hover {
    background: rgba(0, 0, 0, 0.8);
}


/* --- Content Selection (Lessons/Quizzes) --- */
.contentSelectionGrid {
    display: grid;
    grid-template-columns: 1fr 1fr; /* Two equal columns */
    gap: 20px;
}

.addContentSection {
    background: var(--zporta-background-medium);
    border: 1px solid var(--zporta-border-light);
    border-radius: 6px;
    padding: 15px;
    display: flex;
    flex-direction: column; /* Stack heading and box */
}

.addContentSection h3 {
    font-size: 16px;
    color: var(--zporta-secondary-color);
    margin-top: 0;
    margin-bottom: 10px;
    border-bottom: 1px solid var(--zporta-border-light);
    padding-bottom: 8px;
}

/* Scrollable Box for items */
.scrollableBox {
    max-height: 180px; /* Increased height */
    overflow-y: auto;
    border: 1px solid var(--zporta-border-color);
    border-radius: 5px;
    padding: 10px;
    background: var(--zporta-background-light);
}

/* Scrollbar styling */
.scrollableBox::-webkit-scrollbar {
    width: 8px;
}
.scrollableBox::-webkit-scrollbar-track {
    background: var(--zporta-background-medium);
    border-radius: 4px;
}
.scrollableBox::-webkit-scrollbar-thumb {
    background: var(--zporta-border-color);
    border-radius: 4px;
}
.scrollableBox::-webkit-scrollbar-thumb:hover {
    background: var(--zporta-primary-color);
}

/* Lesson/Quiz Item Styling */
.contentItem {
    display: flex;
    align-items: center;
    padding: 6px 0; /* Vertical padding */
    font-size: 14px;
    border-bottom: 1px dashed var(--zporta-border-light); /* Separator */
    transition: background-color 0.2s ease;
}
.contentItem:last-child {
    border-bottom: none;
}
.contentItem:hover {
    background-color: #f0f0f0; /* Subtle hover */
}

.contentItem input[type="checkbox"] {
    margin-right: 10px;
    cursor: pointer;
    accent-color: var(--zporta-primary-color);
}
.contentItem label {
    cursor: pointer;
    color: var(--zporta-secondary-light);
    flex-grow: 1; /* Allow label to take space */
}
.contentItem input[type="checkbox"]:disabled + label {
    cursor: not-allowed;
    color: var(--zporta-text-light);
    text-decoration: line-through;
}
.alreadyAttached {
    font-size: 12px;
    color: var(--zporta-attached-color);
    margin-left: 5px;
    font-style: italic;
}
/* --- Styles for the Header within Content Selection --- */
.contentSectionHeader {
    display: flex;
    justify-content: space-between; /* Pushes title and button apart */
    align-items: center; /* Vertically aligns title and button */
    margin-bottom: 12px; /* Space below the header */
    flex-wrap: wrap; /* Allow wrapping on small screens */
    gap: 10px; /* Gap between items if they wrap */
}

.contentSectionHeader h3 {
    margin: 0; /* Remove default h3 margin */
    flex-grow: 1; /* Allow heading to take available space */
}

/* --- Style adjustments for the button in the header --- */
/* Make the create button slightly smaller in this context */
.contentSectionHeader .createContentBtn {
    padding: 6px 12px; /* Smaller padding */
    font-size: 12px; /* Smaller font */
    /* Remove margin if previously added for spacing below message */
    margin: 0;
    flex-shrink: 0; /* Prevent button from shrinking too much */
}

/* --- Wrapper for the list/message area --- */
.contentListArea {
     /* Inherits background from addContentSection or set one */
     /* Add border/padding if needed, but scrollableBox already has it */
     min-height: 50px; /* Ensure area has some height even when empty */
     display: flex; /* To center the message if needed */
     justify-content: center; /* Centers message horizontally */
     align-items: center; /* Centers message vertically */
}

/* Ensure the scrollable box takes full width inside */
 .contentListArea .scrollableBox {
    width: 100%;
    max-height: 150px; /* Adjust max-height as desired */
    /* Override flex centering from parent if needed */
     margin: 0; /* Reset margin */
 }

/* Adjust the 'no content' message styling */
.contentListArea .noContentMessage {
    padding: 15px; /* Add padding around message */
    color: var(--zporta-text-light);
    font-style: italic;
    text-align: center;
    width: 100%; /* Take full width */
}

/* --- Remove old container if no longer used --- */
/* If .noContentContainer is ONLY used for the old structure, you can remove it */
/*
.noContentContainer { ... }
*/

/* Styling for the message within the container */
.noContentMessage {
    font-size: 14px;
    color: var(--zporta-text-light);
    margin: 0 0 15px 0; /* Space below message, remove default paragraph margins */
}

/* Styling for the 'Create New' button/link */
.createContentBtn {
    display: inline-block; /* Allow padding and width */
    padding: 8px 15px;
    background-color: var(--zporta-primary-color);
    color: var(--zporta-background-light);
    border: none;
    border-radius: 5px;
    font-size: 13px;
    font-weight: 500;
    text-decoration: none; /* Remove underline from Link */
    cursor: pointer;
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.createContentBtn:hover {
    background-color: var(--zporta-primary-hover);
    color: var(--zporta-background-light); /* Ensure text remains white on hover */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
}

.createContentBtn:active {
    transform: translateY(1px);
}

/* --- Optional adjustments to existing styles --- */

/* Add these properties inside the existing .addContentSection rule */
.addContentSection {
    /* ... keep existing properties like background, border, padding ... */
    min-height: 200px; /* Example: give sections a min height */
    justify-content: flex-start; /* Align content to top */
}

/* --- Editor Container --- */
.editorContainer {
    margin-top: 10px; /* Space from legend */
    border: 1px solid var(--zporta-border-color);
    border-radius: 5px;
    padding: 5px; /* Optional padding around the editor */
    min-height: 250px; /* Ensure it has some default height */
}
/* Add styles for your specific CustomEditor if needed, e.g., .editorContainer .tox */

/* --- Notes/Helper Text --- */
.fieldNote {
    font-size: 12px;
    color: var(--zporta-text-light);
    margin-top: 4px;
}

/* --- Save Button Area --- */
.courseSaveButtonArea {
    display: flex;
    justify-content: flex-end; /* Align button to the right */
    margin-top: 15px; /* Space above button */
    padding-top: 20px;
    border-top: 1px solid var(--zporta-border-light);
}

/* --- Zporta Button Styling (Keep your original or adapt) --- */
.zportaBtn {
    padding: 12px 25px;
    background-color: var(--zporta-primary-color);
    color: var(--zporta-background-light);
    border: none;
    border-radius: 6px;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.3s ease, box-shadow 0.3s ease, opacity 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.zportaBtn:hover {
    background-color: var(--zporta-primary-hover);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.zportaBtn:active {
    transform: translateY(1px); /* Slight press effect */
}

.disabledBtn,
.zportaBtn:disabled { /* Style for disabled state */
    background-color: #bdc3c7; /* Greyed out */
    cursor: not-allowed;
    opacity: 0.7;
    box-shadow: none;
}


/* --- Responsive Design --- */

/* Tablet */
@media (max-width: 900px) {
    .createCourseContainer {
        max-width: 90%;
        padding: 20px;
    }
    .formGrid {
        /* Still allow 2 columns if space permits, else 1 */
         grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
         gap: 15px;
    }
    .contentSelectionGrid {
        grid-template-columns: 1fr; /* Stack lesson/quiz selection */
        gap: 15px;
    }
    .createCourseContainer h2 {
        font-size: 22px;
    }
    .formSection legend {
        font-size: 16px;
    }
    .zportaBtn {
        padding: 10px 20px;
        font-size: 15px;
    }
}

/* Mobile */
@media (max-width: 600px) {
    .createCourseContainer {
        max-width: 100%;
        margin: 15px auto;
        padding: 15px;
        border-radius: 8px; /* Slightly smaller radius */
    }
    .formGrid {
        grid-template-columns: 1fr; /* Force single column */
        gap: 15px;
    }
    .formSection {
        padding: 15px;
    }
    .createCourseContainer h2 {
        font-size: 20px;
        margin-bottom: 20px;
    }
    .formGroup label,
    .formGroup input,
    .formGroup select,
    .contentItem label,
    .radioLabel,
    .fileInputButton,
    .fileName {
        font-size: 13px; /* Slightly smaller font on mobile */
    }
    .scrollableBox {
         max-height: 150px; /* Adjust height for smaller screens */
    }
    .imagePreview {
        max-width: 80px;
    }
    .courseSaveButtonArea {
        justify-content: center; /* Center button on mobile */
    }
    .zportaBtn {
        width: 100%; /* Full width button */
        padding: 12px;
    }
    .radioGroup {
        flex-direction: column; /* Stack radio buttons */
        align-items: flex-start;
        gap: 10px;
    }
    /* Add these new rules inside the existing mobile media query */
    .noContentContainer {
        padding: 15px;
    }
    .createContentBtn {
        width: 100%; /* Make button full width on mobile */
        padding: 10px;
    }
    .contentSectionHeader {
        /* Optionally stack title and button on small screens */
        /* flex-direction: column;
        align-items: flex-start; */
        gap: 8px; /* Adjust gap */
   }

   .contentSectionHeader h3 {
        font-size: 15px; /* Slightly smaller heading */
   }

   /* Adjust button size/width if needed on mobile */
    .contentSectionHeader .createContentBtn {
        /* width: 100%; /* Optional: Make button full width */
        /* padding: 8px; */
    }

    .contentListArea .scrollableBox {
        max-height: 130px; /* Maybe slightly less height on mobile */
    }
}