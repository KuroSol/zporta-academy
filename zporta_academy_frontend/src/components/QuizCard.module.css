/* zporta_academy_frontend/src/components/QuizCard.module.css */

:root {
    --zporta-dark-blue: #222E3B;
    --zporta-gold: #E3AF0C;
    --zporta-white: #FFFFFF;
    --primary-color: var(--zporta-dark-blue);
    --accent-color: var(--zporta-gold);
    --text-primary: #1d1d1f;
    --text-secondary: #5a5a5f;
    --bg-card: #ffffff;
    --border-color: #e1e1e6;
    --correct-color: #16a34a;
    --incorrect-color: #dc2626;
    --radius: 20px;
    --shadow: 0 8px 24px rgba(0, 0, 0, 0.05);
    --transition: 0.3s ease;
}

.quizCard {
    font-family: 'Inter', sans-serif;
    background: var(--bg-card);
    border-radius: var(--radius);
    border: 1px solid var(--border-color);
    box-shadow: var(--shadow);
    display: flex;
    flex-direction: column;
    width: 100%;
    margin-bottom: 2.5rem;
    position: relative;
    transition: all var(--transition);
}

/* --- Collapsed View Styles --- */
.cardTitleContainer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 2rem 1.5rem;
    min-height: 220px;
    position: relative;
    color: var(--text-primary);
    border-top-left-radius: var(--radius);
    border-top-right-radius: var(--radius);
}
.cardTitle {
    font-size: clamp(1.5rem, 5vw, 2.2rem);
    font-weight: 800;
    line-height: 1.2;
    margin: 0;
    z-index: 2;
}
.creatorInfo {
    position: absolute;
    top: 1rem;
    left: 1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none;
    background: rgba(255, 255, 255, 0.6);
    backdrop-filter: blur(5px);
    padding: 0.25rem 0.75rem 0.25rem 0.25rem;
    border-radius: 50px;
    z-index: 3;
    transition: var(--transition);
}
.creatorInfo:hover { transform: scale(1.05); }
.creatorAvatar { width: 28px; height: 28px; border-radius: 50%; object-fit: cover; }
.creatorName { font-size: 0.8rem; font-weight: 600; color: var(--text-primary); }

.cardFooter {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem 1.25rem;
    border-top: 1px solid var(--border-color);
    background: #fcfcfc;
    border-bottom-left-radius: var(--radius);
    border-bottom-right-radius: var(--radius);
}
.quizStatsLine { display: flex; align-items: center; gap: 1rem; }
.statItem { display: flex; align-items: center; gap: 0.3rem; color: var(--text-secondary); font-size: 0.8rem; }
.statItem span { font-weight: 600; color: var(--text-primary); }
.correctText { color: var(--correct-color) !important; }
.incorrectText { color: var(--incorrect-color) !important; }

.takeQuizButton {
    background: var(--primary-color);
    color: var(--zporta-white);
    border: none;
    border-radius: 50px;
    padding: 0.75rem 1.5rem;
    font-size: 0.9rem;
    font-weight: 600;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    transition: var(--transition);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}
.takeQuizButton:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);
    background: var(--accent-color);
    color: var(--primary-color);
}
.takeQuizButton:disabled {
    background-color: #ccc;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

/* --- Expanded View Styles --- */
.expandedContent {
    padding: 1rem;
    border-top: 1px solid var(--border-color);
    display: none; /* Hidden by default */
    flex-direction: column;
    gap: 1rem;
}
.quizCard.isExpanded .expandedContent {
    display: flex; /* Shown when card is expanded */
}
.quizCard.isExpanded .cardTitleContainer,
.quizCard.isExpanded .cardFooter {
    display: none; /* Hide the collapsed view parts when expanded */
}

.expandedHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
    width: 100%;
}
.progressIndicator {
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--text-secondary);
    white-space: nowrap;
}
.questionProgress {
    display: flex;
    justify-content: center;
    flex-grow: 1;
    gap: 0.5rem;
}
.progressDot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #e0e0e0;
    border: none;
    padding: 0;
    cursor: pointer;
    transition: var(--transition);
}
.progressDot.active { background: var(--primary-color); }
.progressDot.answered { background: var(--accent-color); }
.progressDot.answered.active { background: var(--primary-color); }

.closeExpandedButton {
    background: #f0f0f0;
    border: none;
    border-radius: 50%;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    color: var(--text-secondary);
    transition: var(--transition);
    flex-shrink: 0;
}
.closeExpandedButton:hover {
    background: #e0e0e0;
    transform: rotate(90deg);
    color: var(--text-primary);
}

.questionContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    width: 100%;
}
.questionMediaContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
    width: 100%;
}
.questionMediaItem {
    max-width: 100%;
    max-height: 250px;
    border-radius: 12px;
    object-fit: cover;
}
.questionText {
    font-size: clamp(1.2rem, 4vw, 1.6rem);
    font-weight: 600;
    color: var(--text-primary);
    margin: 0 0 1.5rem 0;
}

.perQuestionStats {
    display: flex;
    gap: 1rem;
    background: #f5f5f7;
    padding: 0.5rem 1rem;
    border-radius: 50px;
    margin-bottom: 1.5rem;
    font-size: 0.8rem;
}
.statItemClickable {
    background: none; border: none; cursor: pointer;
    display: flex; align-items: center; gap: 0.3rem; color: var(--text-secondary);
}
.statItemClickable:hover { color: var(--accent-color); }

/* Vertical Answer Options */
.optionsList {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    width: 100%;
    max-width: 600px;
}
.optionButton {
    display: flex;
    align-items: center;
    gap: 1rem;
    width: 100%;
    padding: 1rem;
    font-size: 1rem;
    font-weight: 500;
    text-align: left;
    border: 2px solid var(--border-color);
    border-radius: 12px;
    cursor: pointer;
    background-color: var(--bg-card);
    color: var(--text-primary);
    transition: all 0.2s ease;
}
.optionButton:hover:not(:disabled) {
    border-color: var(--accent-color);
    background-color: #fdfaf0;
}
.optionButton.selected {
    border-color: var(--primary-color);
    background-color: #f0f2f5;
}
.optionButton.correct {
    border-color: var(--correct-color);
    background-color: #f0fdf4;
    color: var(--correct-color);
    font-weight: 600;
}
.optionButton.incorrect {
    border-color: var(--incorrect-color);
    background-color: #fef2f2;
    color: var(--incorrect-color);
}
.optionButton.disabled {
    opacity: 0.6;
    background-color: #f5f5f7;
    cursor: not-allowed;
}

.optionMediaImage { width: 50px; height: 50px; object-fit: cover; border-radius: 8px; flex-shrink: 0; }
.optionText { flex-grow: 1; }
.optionMediaAudio { height: 40px; }

/* Feedback & Navigation */
.feedbackAndNav {
    min-height: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    margin: 1rem 0;
}
.feedbackBox {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    font-weight: 500;
}
.feedbackBox.correct { background-color: #f0fdf4; color: var(--correct-color); }
.feedbackBox.incorrect { background-color: #fef2f2; color: var(--incorrect-color); }
.errorText { color: var(--incorrect-color); display: flex; align-items: center; gap: 0.5rem; }

.navigation {
    display: flex;
    justify-content: space-between;
    width: 100%;
    max-width: 600px;
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid var(--border-color);
}
.navButton, .nextButton {
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
    border: 1px solid var(--border-color);
    background-color: #fff;
    color: var(--text-primary);
    padding: 0.6rem 1.2rem;
    border-radius: 50px;
    font-weight: 600;
    cursor: pointer;
    transition: var(--transition);
}
.navButton:hover:not(:disabled), .nextButton:hover:not(:disabled) { background-color: #f5f5f7; border-color: var(--text-secondary); }
.navButton:disabled, .nextButton:disabled { opacity: 0.5; cursor: not-allowed; }

.nextButton {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    color: var(--zporta-white);
}
.nextButton:hover:not(:disabled) {
    background-color: var(--accent-color);
    border-color: var(--accent-color);
    color: var(--primary-color);
}

/* Modal styles */
.modalBackdrop { position: fixed; top: 0; left: 0; right: 0; bottom: 0; background-color: rgba(0, 0, 0, 0.6); display: flex; align-items: center; justify-content: center; z-index: 1000; padding: 1rem; }
.modal { background-color: var(--bg-card); border-radius: var(--radius); box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1); width: 100%; max-width: 480px; max-height: 90vh; display: flex; flex-direction: column; overflow: hidden; }
.modalHeader { display: flex; justify-content: space-between; align-items: center; padding: 1rem 1.25rem; border-bottom: 1px solid var(--border-color); }
.modalHeader h4 { margin: 0; }
.closeBtn { background: none; border: none; font-size: 1.5rem; cursor: pointer; }
.modalBody { padding: 0; overflow-y: auto; }
.userList { list-style: none; padding: 0; margin: 0; }
.userRow { display: flex; align-items: center; gap: 1rem; padding: 0.75rem 1.25rem; }
.userRow + .userRow { border-top: 1px solid var(--border-color); }
.userAvatar { width: 44px; height: 44px; border-radius: 50%; object-fit: cover; }
.userMeta { flex-grow: 1; }
.username { font-weight: 600; }
.metaLine { font-size: 0.8rem; color: var(--text-secondary); }
.modalFooter { padding: 1rem; border-top: 1px solid var(--border-color); text-align: center; }
.loadMoreBtn { background-color: transparent; border: 1px solid var(--border-color); padding: 0.6rem 1.25rem; border-radius: var(--radius); cursor: pointer; }
.loadingContainer, .emptyState { padding: 2rem; text-align: center; color: var(--text-secondary); }
.loadingIcon { animation: spin 1s linear infinite; }
@keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }
