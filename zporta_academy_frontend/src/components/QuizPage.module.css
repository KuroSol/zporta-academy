/* QuizPage.module.css */

/* ==========================================================================
   Base Variables & Reset
   ========================================================================== */
   :root {
    --primary-color: #4f46e5; /* indigo-600 */
    --primary-color-hover: #4338ca; /* indigo-700 */
    --primary-color-light: #e0e7ff; /* indigo-100 */
    --correct-color: #16a34a; /* green-600 */
    --correct-bg: #f0fdf4; /* green-50 */
    --correct-border: #86efac; /* green-300 */
    --incorrect-color: #dc2626; /* red-600 */
    --incorrect-bg: #fee2e2; /* red-100 */
    --incorrect-border: #fca5a5; /* red-300 */
    --error-color-dark: #b91c1c; /* red-700 */
    --text-primary: #1f2937; /* gray-800 */
    --text-secondary: #4b5563; /* gray-600 */
    --text-light: #6b7280; /* gray-500 */
    --text-disabled: #9ca3af; /* gray-400 */
    --bg-light: #ffffff;
    --bg-subtle: #f9fafb; /* gray-50 */
    --bg-page: #f3f4f6; /* gray-100 */
    --border-color: #e5e7eb; /* gray-200 */
    --border-color-medium: #d1d5db; /* gray-300 */
    --border-radius: 0.75rem; /* 12px */
    --border-radius-sm: 0.375rem; /* 6px */
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --transition-speed: 0.2s;
    --transition-speed-fast: 0.15s;
    --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  }
  
  /* Basic Reset */
  *, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  
  /* ==========================================================================
     Base Input Field Styles (Still useful for reference, but not composed by shortAnswerInput now)
     ========================================================================== */
  .inputField { /* Base style for text inputs, textareas */
    padding: 0.75rem 1rem;
    border: 1px solid var(--border-color-medium);
    border-radius: var(--border-radius-sm);
    font-size: 1rem;
    font-family: inherit;
    color: var(--text-primary);
    background-color: var(--bg-light);
    transition: border-color var(--transition-speed-fast) ease, box-shadow var(--transition-speed-fast) ease;
    width: 100%;
    box-sizing: border-box;
  }
  
  .inputField:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px var(--primary-color-light);
    outline: none;
  }
  
  .inputField::placeholder {
    color: var(--text-light);
    opacity: 0.7;
  }
  
  .inputField:disabled {
    background-color: var(--bg-subtle);
    color: var(--text-disabled);
    border-color: var(--border-color);
    cursor: not-allowed;
    opacity: 0.7;
  }
  
  /* ==========================================================================
     Base Button Style (Moved UP for composes)
     ========================================================================== */
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    border: 1px solid transparent;
    padding: 0.75rem 1.5rem;
    border-radius: var(--border-radius-sm);
    font-family: inherit;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: background-color var(--transition-speed-fast) ease, transform var(--transition-speed-fast) ease, box-shadow var(--transition-speed-fast) ease, border-color var(--transition-speed-fast) ease;
    box-shadow: var(--shadow-sm);
    white-space: nowrap;
    text-align: center;
  }
  .btn:disabled {
    background-color: var(--border-color-medium) !important;
    color: var(--text-disabled) !important;
    border-color: var(--border-color-medium) !important;
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }
  .btn:hover:not(:disabled) {
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }
  .btn:active:not(:disabled) {
    transform: translateY(0px);
    box-shadow: var(--shadow-sm);
  }
  
  /* ==========================================================================
     Page Layout
     ========================================================================== */
  .pageContainer {
    font-family: var(--font-sans);
    background-color: var(--bg-page);
    padding: 1rem;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: flex-start;
  }
  
  /* ==========================================================================
     Main Quiz Container
     ========================================================================== */
  .quizContainer {
    background-color: var(--bg-light);
    width: 100%;
    max-width: 800px;
    margin: 2rem auto;
    padding: 1.5rem;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-lg);
    border: 1px solid var(--border-color);
    animation: fadeIn 0.5s ease-out;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  @media (min-width: 640px) { /* sm */
    .pageContainer { padding: 2rem; }
    .quizContainer { padding: 2rem; gap: 2rem; }
  }
  @media (min-width: 1024px) { /* lg */
    .quizContainer { padding: 2.5rem; }
  }
  
  /* ==========================================================================
     Quiz Header Section (Title, Actions, Progress)
     ========================================================================== */
  .quizHeader {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      border-bottom: 1px solid var(--border-color);
      padding-bottom: 1.5rem;
      margin-bottom: -0.5rem;
  }
  
  .quizTitle {
    font-size: 1.75rem;
    font-weight: 700;
    color: var(--text-primary);
    text-align: center;
    line-height: 1.3;
  }
  @media (min-width: 640px) {
    .quizTitle { font-size: 2.25rem; }
  }
  
  /* --- Owner Actions --- */
  .quizActions {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 0.75rem;
  }
  
  .actionButton {
    display: inline-flex;
    align-items: center;
    gap: 0.4rem;
    padding: 0.35rem 0.9rem;
    font-size: 0.85rem;
    font-weight: 500;
    border-radius: var(--border-radius-sm);
    border: 1px solid transparent;
    cursor: pointer;
    transition: all var(--transition-speed-fast) ease-in-out;
  }
  .actionButton:disabled { opacity: 0.6; cursor: not-allowed; }
  .actionButton span { display: none; }
  @media (min-width: 640px) {
      .actionButton span { display: inline; }
  }
  
  .editButton { color: var(--primary-color); background-color: var(--primary-color-light); border-color: var(--primary-color-light); }
  .editButton:not(:disabled):hover { background-color: #c7d2fe; border-color: #c7d2fe; color: var(--primary-color-hover); }
  .deleteButton { color: var(--incorrect-color); background-color: var(--incorrect-bg); border-color: var(--incorrect-bg); }
  .deleteButton:not(:disabled):hover { background-color: #fecaca; border-color: #fecaca; color: #b91c1c; }
  .spinner { animation: spin 1s linear infinite; }
  @keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }
  
  /* --- Progress Bar --- */
  .progressContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }
  
  .progressBar {
    background-color: var(--border-color);
    border-radius: 99px;
    height: 10px;
    overflow: hidden;
    width: 100%;
  }
  
  .progressFill {
    background: linear-gradient(to right, var(--primary-color), #a78bfa);
    height: 100%;
    border-radius: 99px;
    transition: width 0.4s ease-in-out;
  }
  
  .progressText {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--text-light);
  }
  
  /* ==========================================================================
     Question Card Section
     ========================================================================== */
  .questionCard {
      background-color: var(--bg-subtle);
      border: 1px solid var(--border-color);
      border-radius: var(--border-radius);
      padding: 1.5rem;
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
      box-shadow: var(--shadow-sm);
  }
  
  .questionMediaArea {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 1rem;
  }
  
  .mediaImage {
    display: block;
    width: 100%;
    max-width: 550px;
    max-height: 350px;
    object-fit: contain;
    border-radius: var(--border-radius-sm);
  }
  
  .mediaAudio {
    display: block;
    width: 100%;
    max-width: 450px;
  }
  
  .questionContentArea {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 1rem;
  }
  
  .questionText {
    font-size: 1.125rem;
    line-height: 1.7;
    color: var(--text-primary);
    font-weight: 400;
    text-align: center;
    width: 100%;
  }
  @media (min-width: 640px) {
    .questionText { font-size: 1.3rem; }
  }
  .questionText p { margin-bottom: 0.75em; }
  .questionText strong { font-weight: 600; color: var(--text-primary); }
  .questionText em { font-style: italic; color: var(--text-secondary); }
  .questionText code {
    background-color: var(--border-color);
    padding: 0.2em 0.5em;
    border-radius: 4px;
    font-size: 0.9em;
    font-family: monospace;
    color: var(--text-secondary);
  }
  
  /* --- Hints --- */
  .hintsContainer {
      display: flex;
      gap: 0.5rem;
      justify-content: center;
      margin-top: 0.5rem;
  }
  .hintButton {
      display: inline-flex;
      align-items: center;
      gap: 0.3rem;
      background-color: transparent;
      border: 1px solid var(--border-color-medium);
      color: var(--text-secondary);
      padding: 0.3rem 0.7rem;
      border-radius: var(--border-radius-sm);
      font-size: 0.8rem;
      font-weight: 500;
      cursor: pointer;
      transition: all var(--transition-speed-fast);
  }
  .hintButton:hover:not(:disabled) {
      background-color: var(--primary-color-light);
      border-color: var(--primary-color);
      color: var(--primary-color);
  }
  .hintButton:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      background-color: var(--bg-subtle);
  }
  .hintDisplay {
      background-color: #fffbeb;
      color: #a16207;
      padding: 0.75rem 1rem;
      border-radius: var(--border-radius-sm);
      margin-top: 0.5rem;
      font-size: 0.9rem;
      text-align: center;
      border: 1px solid #fde68a;
      width: 100%;
      max-width: 600px;
      animation: fadeIn 0.3s ease-out;
  }
  .hintDisplay strong {
      font-weight: 600;
  }
  
  /* ==========================================================================
     Answer Area (Container for different types)
     ========================================================================== */
  .answerArea {
      margin-top: 0.5rem;
  }
  
  /* --- Options Grid (MCQ / Multi) --- */
  .optionsGrid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 0.75rem;
  }
  @media (min-width: 768px) { /* md */
    .optionsGrid {
      grid-template-columns: repeat(2, 1fr);
      gap: 1rem;
    }
  }
  
  /* Base Option Styling (Button / Label) */
  .optionButton, .optionLabel {
    display: flex;
    flex-direction: column;
    width: 100%;
    padding: 1rem;
    font-family: inherit;
    font-size: 1rem;
    text-align: left;
    color: var(--text-primary);
    background-color: var(--bg-light);
    border: 2px solid var(--border-color-medium);
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: all var(--transition-speed-fast) ease-in-out;
    position: relative;
    overflow: hidden;
    min-height: 60px;
    gap: 0.75rem;
  }
  .optionLabel {
      cursor: pointer;
  }
  
  /* Hover/Focus for Interactive Options */
  .optionButton:not(:disabled):not(.disabled):hover,
  .optionLabel:not([aria-disabled="true"]):hover {
    border-color: var(--primary-color);
    background-color: #f0f0ff;
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
  }
  .optionButton:focus-visible,
  .optionLabel:focus-within {
    outline: 3px solid var(--primary-color-light);
    outline-offset: 1px;
    border-color: var(--primary-color);
  }
  
  /* Option Content (Image + Text) */
  .optionContent {
      display: flex;
      align-items: center;
      gap: 1rem;
      width: 100%;
  }
  
  .optionMediaImage {
      width: 60px;
      height: 60px;
      object-fit: cover;
      border-radius: var(--border-radius-sm);
      flex-shrink: 0;
      background-color: var(--border-color);
  }
  
  .optionAudioControl {
      display: block;
      width: 100%;
      margin-top: 0.5rem;
      height: 40px;
  }
  .optionAudioControl::-webkit-media-controls-panel {
    background-color: var(--bg-subtle);
    border-radius: var(--border-radius-sm);
  }
  
  .optionText {
      flex-grow: 1;
      line-height: 1.6;
      font-weight: 500;
  }
  .optionText p { margin: 0; }
  .optionText strong { font-weight: 600; }
  .optionText code {
      background-color: var(--border-color);
      padding: 0.1em 0.4em;
      border-radius: 4px;
      font-size: 0.9em;
  }
  
  /* Checkbox for Multi-Select */
  .multiCheckbox {
      position: absolute;
      opacity: 0;
      width: 0;
      height: 0;
      pointer-events: none;
  }
  
  /* Feedback Icons on Options */
  .optionFeedbackIconCorrect, .optionFeedbackIconIncorrect {
      position: absolute;
      top: 0.75rem;
      right: 0.75rem;
      opacity: 0;
      transform: scale(0.7);
      transition: opacity 0.2s ease-out, transform 0.2s ease-out;
      pointer-events: none;
      background-color: rgba(255, 255, 255, 0.7);
      border-radius: 50%;
      padding: 2px;
  }
  .optionFeedbackIconCorrect { color: var(--correct-color); }
  .optionFeedbackIconIncorrect { color: var(--incorrect-color); }
  
  /* Option States (Selected, Correct, Incorrect, Disabled) */
  .optionButton.selected, .optionLabel.selected {
      border-color: var(--primary-color);
      background-color: var(--primary-color-light);
  }
  .optionButton.correct, .optionLabel.correct {
    border-color: var(--correct-border);
    background-color: var(--correct-bg);
  }
  .optionButton.incorrect, .optionLabel.incorrect {
    border-color: var(--incorrect-border);
    background-color: var(--incorrect-bg);
  }
  
  /* Show icons based on state */
  .optionButton.correct .optionFeedbackIconCorrect,
  .optionLabel.correct .optionFeedbackIconCorrect,
  .optionButton.incorrect .optionFeedbackIconIncorrect,
  .optionLabel.incorrect .optionFeedbackIconIncorrect {
      opacity: 1;
      transform: scale(1);
  }
  
  .optionButton.disabled, .optionLabel.disabled {
    opacity: 0.6;
    cursor: default;
    background-color: var(--bg-subtle);
    border-color: var(--border-color);
    transform: none;
    box-shadow: none;
    pointer-events: none;
  }
  .optionButton:disabled, .optionLabel[aria-disabled="true"] {
      cursor: default;
      pointer-events: none;
  }
  
  /* --- Short Answer Area --- */
  .shortAnswerArea {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      align-items: center;
  }
  .shortAnswerInput {
      /* REMOVED: composes: inputField; */
      /* COPIED styles from .inputField */
      padding: 0.75rem 1rem;
      border: 1px solid var(--border-color-medium);
      border-radius: var(--border-radius-sm);
      font-size: 1rem;
      font-family: inherit;
      color: var(--text-primary);
      background-color: var(--bg-light);
      transition: border-color var(--transition-speed-fast) ease, box-shadow var(--transition-speed-fast) ease;
      width: 100%;
      box-sizing: border-box;
      /* Additional styles specific to shortAnswerInput */
      max-width: 500px;
      text-align: center;
      font-size: 1.1rem;
  }
  .shortAnswerInput:focus { /* Copied focus style */
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px var(--primary-color-light);
      outline: none;
  }
  .shortAnswerInput::placeholder { /* Copied placeholder style */
      color: var(--text-light);
      opacity: 0.7;
  }
  .shortAnswerInput:disabled { /* Copied disabled style */
      background-color: var(--bg-subtle);
      color: var(--text-disabled);
      border-color: var(--border-color);
      cursor: not-allowed;
      opacity: 0.7;
  }
  
  
  /* --- Word Sort / Drag Drop Placeholders --- */
  .sortArea, .dragDropArea {
      border: 2px dashed var(--border-color-medium);
      border-radius: var(--border-radius);
      padding: 2rem;
      text-align: center;
      background-color: var(--bg-subtle);
      min-height: 150px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      gap: 1rem;
  }
  .placeholderText {
      font-style: italic;
      color: var(--text-light);
  }
  
  /* --- Submit Button for Multi/Short/Complex Types --- */
  .btnSubmitAnswer {
      composes: btn; /* Use base button style - .btn defined above */
      background-color: var(--primary-color);
      color: var(--bg-light);
      align-self: center;
      margin-top: 0.5rem;
      width: fit-content;
  }
  .btnSubmitAnswer:hover:not(:disabled) {
      background-color: var(--primary-color-hover);
  }
  
  /* ==========================================================================
     Feedback Area (Below Answers)
     ========================================================================== */
  .feedbackArea {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    padding: 0.85rem 1.25rem;
    margin-top: 1rem;
    border-radius: var(--border-radius);
    font-size: 1.05rem;
    font-weight: 600;
    text-align: center;
    animation: fadeInScale 0.3s ease-out;
    border: 1px solid transparent;
  }
  
  .feedbackCorrect {
    background-color: var(--correct-bg);
    color: var(--correct-color);
    border-color: var(--correct-border);
  }
  
  .feedbackIncorrect {
    background-color: var(--incorrect-bg);
    color: var(--incorrect-color);
    border-color: var(--incorrect-border);
  }
  
  .feedbackIcon {
    width: 1.3rem;
    height: 1.3rem;
    flex-shrink: 0;
  }
  
  .correctAnswerText {
      font-weight: 400;
      font-size: 0.9em;
      margin-left: 0.75rem;
      color: var(--text-secondary);
      font-style: italic;
  }
  
  /* General error message (e.g., for failed submit) */
  .errorMessageGeneral {
      /* Composes removed as message/error not defined here */
      /* Instead, apply styles directly or define message/error */
      padding: 0.75rem 1rem;
      margin-top: 1rem;
      border-radius: var(--border-radius-sm);
      font-size: 0.9rem;
      text-align: center;
      font-weight: 500;
      background-color: var(--incorrect-bg);
      color: var(--error-color-dark);
      border: 1px solid var(--incorrect-border);
  }
  
  /* ==========================================================================
     Navigation
     ========================================================================== */
  .navigation {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--border-color);
  }
  
  .navButton {
    composes: btn; /* .btn defined above */
    background-color: var(--primary-color);
    color: var(--bg-light);
    padding: 0.75rem 1.25rem;
  }
  
  .navButton:hover:not(:disabled) {
    background-color: var(--primary-color-hover);
  }
  
  .navButton:first-child {
    background-color: var(--bg-light);
    color: var(--primary-color);
    border: 1px solid var(--border-color-medium);
  }
  .navButton:first-child:hover:not(:disabled) {
    background-color: var(--bg-subtle);
    border-color: var(--primary-color);
    color: var(--primary-color-hover);
  }
  
  /* --- Completion Message --- */
  .completionMessage {
    text-align: center;
    padding: 1rem 0;
    color: var(--correct-color);
    font-weight: 600;
    font-size: 1.1rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    flex-grow: 1;
  }
  .resultsButton {
    composes: navButton; /* .navButton defined above */
    width: fit-content;
  }
  
  /* ==========================================================================
     Error Display & Skeleton Loader (Keep existing)
     ========================================================================== */
  .errorContainer { /* Keep existing */ }
  .errorTitle { /* Keep existing */ }
  .errorMessage { /* Keep existing */ }
  .errorIcon { /* Keep existing */ }
  
  .skeletonContainer { /* Keep existing */ }
  .skeleton { /* Keep existing */ }
  .skeletonTitle { /* Keep existing */ }
  .skeletonProgress { /* Keep existing */ }
  .skeletonProgressText { /* Keep existing */ }
  .skeletonQuestionArea { /* Keep existing */ }
  .skeletonOptionsGrid { /* Keep existing */ }
  .skeletonOption { /* Keep existing */ }
  .skeletonNav { /* Keep existing */ }
  .skeletonButton { /* Keep existing */ }
  
  /* ==========================================================================
     Animations & Utilities (Keep existing)
     ========================================================================== */
  @keyframes fadeIn { /* Keep existing */ }
  @keyframes fadeInScale { /* Keep existing */ }
  .visuallyHidden { /* Keep existing */ }
  
  