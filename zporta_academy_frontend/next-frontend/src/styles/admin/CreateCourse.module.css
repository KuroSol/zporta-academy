/* CreateCourse.module.css */
/* --- Theme Variables (Zporta Theme) --- */


/* --- General Container & Page Styling --- */
.createCourseContainer { /* Also used by CreateLesson for standalone page */
    max-width: 1000px;
    margin: 30px auto;
    padding: 30px 35px; /* Increased padding */
    border-radius: var(--zporta-border-radius);
    background: var(--zporta-background-light);
    box-shadow: var(--zporta-box-shadow);
    font-family: var(--zporta-font-family);
    border: 1px solid var(--zporta-border-light);
}

.createCourseContainer h2,
.modalFormTitle { /* Shared title style */
    font-size: 28px; /* Slightly larger */
    color: var(--zporta-secondary-color);
    text-align: center;
    margin-bottom: 30px; /* Increased spacing */
    font-weight: 600;
    padding-bottom: 15px;
    border-bottom: 1px solid var(--zporta-border-light);
}

/* --- Loading State --- */
.loading {
    text-align: center;
    padding: 60px 20px;
    font-size: 18px;
    color: var(--zporta-secondary-light);
    font-family: var(--zporta-font-family);
}

/* --- Message Styling (Shared by CreateCourse and CreateLesson) --- */
.message {
    padding: 12px 18px;
    margin-bottom: 20px;
    border-radius: var(--zporta-border-radius);
    font-size: 14px;
    text-align: center;
    font-weight: 500;
    border-width: 1px;
    border-style: solid;
}

.error {
    background-color: var(--zporta-error-bg);
    color: var(--zporta-error-color);
    border-color: var(--zporta-error-color);
}

.success {
    background-color: var(--zporta-success-bg);
    color: var(--zporta-success-color);
    border-color: var(--zporta-success-color);
}

.warning { /* Added warning style */
    background-color: var(--zporta-warning-bg);
    color: var(--zporta-warning-color);
    border-color: var(--zporta-warning-color);
}


/* --- Form Structure (Shared & Base for CreateLesson) --- */
.courseForm, .lessonForm { /* Shared form styling */
    display: flex;
    flex-direction: column;
    gap: 30px; /* Increased gap between sections */
}

.formSection { /* Fieldset */
    border: 1px solid var(--zporta-border-light);
    border-radius: var(--zporta-border-radius);
    padding: 25px; /* Increased padding */
    margin: 0;
    background-color: var(--zporta-background-medium); /* Subtle background for sections */
}

.formSection legend {
    font-size: 20px; /* Slightly larger legend */
    font-weight: 600;
    color: var(--zporta-secondary-color);
    padding: 0 10px;
    margin-left: 10px;
    background-color: var(--zporta-background-medium); /* Match fieldset background */
}

.formGrid { /* Used in CreateCourse, adaptable for CreateLesson if needed */
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); /* Responsive grid */
    gap: 25px; /* Gap between grid items */
}

/* --- Form Elements (Shared & Base for CreateLesson) --- */
.formGroup {
    display: flex;
    flex-direction: column;
    gap: 8px; /* Space between label and input */
}

.formGroup label {
    font-size: 14px;
    font-weight: 500; /* Slightly less bold */
    color: var(--zporta-secondary-light);
}

.required {
    color: var(--zporta-required-color);
    margin-left: 3px;
    font-weight: bold;
}

/* Standard input, select, textarea styling */
.formGroup input[type="text"],
.formGroup input[type="number"],
.formGroup input[type="email"],
.formGroup input[type="url"], /* Added for videoUrl */
.formGroup select,
.formGroup textarea,
.inputField, /* Class from CreateLesson */
.selectField { /* Class from CreateLesson */
    padding: 12px 15px; /* Increased padding */
    border: 1px solid var(--zporta-border-color);
    border-radius: calc(var(--zporta-border-radius) - 2px); /* Slightly smaller radius for inputs */
    font-size: 14px;
    color: var(--zporta-text-color);
    background-color: var(--zporta-background-light);
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
    width: 100%;
    box-sizing: border-box;
}

.formGroup input:focus,
.formGroup select:focus,
.formGroup textarea:focus,
.inputField:focus,
.selectField:focus {
    border-color: var(--zporta-primary-color);
    box-shadow: 0 0 0 3px rgba(var(--zporta-primary-color), 0.2); /* Adjusted focus ring */
    outline: none;
}

.formGroup input::placeholder,
.formGroup textarea::placeholder,
.inputField::placeholder {
    color: var(--zporta-text-light);
    opacity: 0.8;
}

/* Radio Button Group */
.radioGroup {
    display: flex;
    gap: 20px; /* Horizontal gap */
    align-items: center;
    margin-top: 8px;
    flex-wrap: wrap; /* Allow wrapping */
}

.radioLabel {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
    cursor: pointer;
    font-weight: normal;
    color: var(--zporta-text-color);
}

.radioLabel input[type="radio"] {
   accent-color: var(--zporta-primary-color);
   cursor: pointer;
   width: 16px; /* Explicit size */
   height: 16px;
   margin-right: 4px; /* Ensure proper spacing */
}

/* File Input Styling */
.fileInputButton {
    padding: 10px 18px;
    border: 1px solid var(--zporta-primary-color);
    background-color: var(--zporta-background-light);
    color: var(--zporta-primary-color);
    border-radius: calc(var(--zporta-border-radius) - 2px);
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: background-color 0.2s ease, color 0.2s ease;
    display: inline-block;
    width: auto;
    margin-top: 5px;
}

.fileInputButton:hover {
    background-color: var(--zporta-primary-color);
    color: var(--zporta-background-light);
}

.imagePreviewContainer {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-top: 12px;
    position: relative;
    background-color: var(--zporta-background-medium);
    padding: 8px;
    border-radius: var(--zporta-border-radius);
    border: 1px solid var(--zporta-border-light);
}

.imagePreview {
    max-width: 120px;
    max-height: 70px;
    border-radius: calc(var(--zporta-border-radius) - 4px);
    border: 1px solid var(--zporta-border-light);
    object-fit: cover;
}

.fileName {
    font-size: 13px;
    color: var(--zporta-text-light);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 220px;
}

.clearImageButton {
    background: rgba(44, 62, 80, 0.6); /* Darker, semi-transparent */
    color: white;
    border: none;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    font-size: 14px;
    line-height: 24px;
    text-align: center;
    cursor: pointer;
    transition: background-color 0.2s ease;
    padding: 0;
    margin-left: auto; /* Push to the right if needed, or adjust layout */
}
.clearImageButton:hover {
    background: var(--zporta-secondary-color);
}


/* --- Content Selection (Lessons/Quizzes - Shared by CreateCourse & CreateLesson for Quizzes) --- */
.contentSelectionGrid { /* Used in CreateCourse */
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 25px;
}

.addContentSection { /* Container for "Available Lessons/Quizzes" */
    background: var(--zporta-background-light); /* Lighter than formSection */
    border: 1px solid var(--zporta-border-light);
    border-radius: var(--zporta-border-radius);
    padding: 20px;
    display: flex;
    flex-direction: column;
    min-height: 250px; /* Ensure some height */
}

.contentSectionHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
    flex-wrap: wrap;
    gap: 10px;
    padding-bottom: 10px;
    border-bottom: 1px solid var(--zporta-border-light);
}

.contentSectionHeader h3 {
    font-size: 16px;
    color: var(--zporta-secondary-color);
    margin: 0;
    font-weight: 600;
}

/* Button to create new content (lesson/quiz) */
.createContentBtn {
    display: inline-flex; /* For aligning icon and text */
    align-items: center;
    gap: 6px;
    padding: 8px 16px; /* Adjusted padding */
    background-color: var(--zporta-primary-color);
    color: var(--zporta-background-light);
    border: none;
    border-radius: calc(var(--zporta-border-radius) - 2px);
    font-size: 13px;
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    transition: background-color 0.2s ease, box-shadow 0.2s ease;
}

.createContentBtn:hover:not(:disabled) {
    background-color: var(--zporta-primary-hover);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}
.createContentBtn:disabled {
    background-color: var(--zporta-border-color);
    cursor: not-allowed;
    opacity: 0.7;
}

.contentListArea {
     min-height: 100px; /* Ensure area has some height */
     display: flex;
     flex-direction: column; /* Ensure scrollbox takes width */
     flex-grow: 1; /* Allow it to take available vertical space */
}

.scrollableBox {
    flex-grow: 1; /* Takes available space in contentListArea */
    max-height: 200px; /* Default max height */
    overflow-y: auto;
    border: 1px solid var(--zporta-border-color);
    border-radius: calc(var(--zporta-border-radius) - 2px);
    padding: 10px;
    background: var(--zporta-background-light);
    margin-top: 5px; /* Space from header if no items */
}

.scrollableBox::-webkit-scrollbar { width: 8px; }
.scrollableBox::-webkit-scrollbar-track { background: var(--zporta-background-medium); border-radius: 4px; }
.scrollableBox::-webkit-scrollbar-thumb { background: var(--zporta-border-color); border-radius: 4px; }
.scrollableBox::-webkit-scrollbar-thumb:hover { background: var(--zporta-primary-color); }

.contentItem {
    display: flex;
    align-items: center;
    padding: 8px 5px;
    font-size: 14px;
    border-bottom: 1px dashed var(--zporta-border-light);
    transition: background-color 0.2s ease;
    color: var(--zporta-text-color);
}
.contentItem:last-child { border-bottom: none; }
.contentItem:hover { background-color: var(--zporta-primary-light); }

.contentItem input[type="checkbox"] {
    margin-right: 12px;
    cursor: pointer;
    accent-color: var(--zporta-primary-color);
    width: 15px;
    height: 15px;
}
.contentItem label {
    cursor: pointer;
    color: var(--zporta-text-color); /* Match general text */
    flex-grow: 1;
    font-weight: normal; /* Override potential bold from .formGroup label */
}
.contentItem input[type="checkbox"]:disabled + label {
    cursor: not-allowed;
    color: var(--zporta-text-light);
    text-decoration: line-through;
}
.alreadyAttached {
    font-size: 12px;
    color: var(--zporta-attached-color);
    margin-left: 8px;
    font-style: italic;
    font-weight: 500;
}

.noContentMessage {
    padding: 20px;
    color: var(--zporta-text-light);
    font-style: italic;
    text-align: center;
    width: 100%;
    margin: auto; /* Center in flex container */
    font-size: 14px;
}

/* --- Editor Container (Shared by CreateCourse & CreateLesson) --- */
.editorContainer {
    margin-top: 10px;
    border: 1px solid var(--zporta-border-color);
    border-radius: var(--zporta-border-radius);
    padding: 5px; /* Minimal padding around the editor toolbar/content */
    min-height: 250px; /* Default height */
    background-color: var(--zporta-background-light);
}
.editorPlaceholder { /* For when editor is disabled */
    padding: 20px;
    text-align: center;
    color: var(--zporta-text-light);
    font-style: italic;
    min-height: 200px; /* Match editor min-height */
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px dashed var(--zporta-border-light);
    border-radius: var(--zporta-border-radius);
}


/* --- Notes/Helper Text --- */
.fieldNote {
    font-size: 12px;
    color: var(--zporta-text-light);
    margin-top: 6px;
    font-style: italic;
}

/* --- Action Buttons Area (Shared: Save/Cancel/Publish) --- */
.formActions, /* New general class for form actions */
.courseSaveButtonArea, /* Legacy, can be replaced by formActions */
.modalActions { /* From CreateLesson, harmonized */
    display: flex;
    justify-content: flex-end;
    gap: 12px;
    margin-top: 25px;
    padding-top: 25px;
    border-top: 1px solid var(--zporta-border-light);
}

/* --- Zporta Button Styling (Primary, Secondary, etc.) --- */
.zportaBtn { /* Base button style */
    padding: 12px 28px; /* Generous padding */
    border: none;
    border-radius: var(--zporta-border-radius);
    font-size: 15px; /* Slightly larger */
    font-weight: 600; /* Bolder */
    cursor: pointer;
    transition: background-color 0.2s ease, box-shadow 0.2s ease, opacity 0.2s ease, transform 0.1s ease;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
    text-decoration: none; /* For Link components styled as buttons */
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

.zportaBtn:hover:not(:disabled) {
    box-shadow: var(--zporta-box-shadow-hover);
    transform: translateY(-1px); /* Subtle lift */
}

.zportaBtn:active:not(:disabled) {
    transform: translateY(0px); /* Press effect */
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
}

.zportaBtnPrimary { /* Main action button */
    background-color: var(--zporta-primary-color);
    color: var(--zporta-background-light);
}
.zportaBtnPrimary:hover:not(:disabled) {
    background-color: var(--zporta-primary-hover);
}

.zportaBtnSecondary { /* Cancel or alternative action */
    background-color: var(--zporta-background-medium);
    color: var(--zporta-secondary-light);
    border: 1px solid var(--zporta-border-color);
}
.zportaBtnSecondary:hover:not(:disabled) {
    background-color: var(--zporta-background-dark);
    border-color: var(--zporta-border-color); /* Keep border consistent or slightly darken */
    color: var(--zporta-secondary-color);
}

.disabledBtn,
.zportaBtn:disabled {
    background-color: #bdc3c7 !important; /* Greyed out, important to override specifics */
    color: #7f8c8d !important;
    cursor: not-allowed;
    opacity: 0.6;
    box-shadow: none;
    transform: none;
}


/* --- Responsive Design --- */
/* Tablet */
@media (max-width: 900px) {
    .createCourseContainer {
        max-width: 95%;
        padding: 25px 20px;
        margin: 20px auto;
    }
    .formGrid {
         grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
         gap: 20px;
    }
    .contentSelectionGrid {
        grid-template-columns: 1fr; /* Stack lesson/quiz selection */
        gap: 20px;
    }
    .createCourseContainer h2, .modalFormTitle {
        font-size: 24px;
        margin-bottom: 25px;
    }
    .formSection legend {
        font-size: 18px;
    }
    .zportaBtn {
        padding: 10px 22px;
        font-size: 14px;
    }
    .scrollableBox {
        max-height: 180px;
    }
}

/* Mobile */
@media (max-width: 600px) {
    .createCourseContainer {
        max-width: 100%;
        margin: 15px auto;
        padding: 20px 15px;
        border-radius: calc(var(--zporta-border-radius) - 2px);
        box-shadow: none; /* Flatter on mobile */
        border: none; /* Remove border for edge-to-edge feel */
    }
    .courseForm, .lessonForm {
        gap: 20px;
    }
    .formGrid {
        grid-template-columns: 1fr; /* Force single column */
        gap: 18px;
    }
    .formSection {
        padding: 20px 15px;
        background-color: var(--zporta-background-light); /* Can make sections less distinct on mobile */
    }
    .createCourseContainer h2, .modalFormTitle {
        font-size: 22px;
        margin-bottom: 20px;
    }

    .formGroup input[type="text"],
    .formGroup input[type="number"],
    .formGroup input[type="email"],
    .formGroup input[type="url"],
    .formGroup select,
    .formGroup textarea,
    .inputField,
    .selectField,
    .formGroup label,
    .contentItem label,
    .radioLabel,
    .fileInputButton,
    .fileName {
        font-size: 14px; /* Maintain readability */
    }
    .formGroup input[type="text"],
    .formGroup input[type="number"],
    .formGroup input[type="email"],
    .formGroup input[type="url"],
    .formGroup select,
    .formGroup textarea,
    .inputField,
    .selectField {
        padding: 10px 12px;
    }

    .scrollableBox {
         max-height: 160px;
    }
    .imagePreview {
        max-width: 100px;
        max-height: 60px;
    }
    .formActions,
    .courseSaveButtonArea,
    .modalActions {
        flex-direction: column-reverse; /* Stack buttons */
        gap: 10px;
    }
    .zportaBtn {
        width: 100%;
        padding: 12px;
        font-size: 15px; /* Ensure tap target is good */
    }
    .radioGroup {
        flex-direction: column;
        align-items: flex-start;
        gap: 12px;
    }
    .contentSectionHeader {
        flex-direction: column; /* Stack title and button */
        align-items: flex-start;
        gap: 8px;
   }
   .contentSectionHeader .createContentBtn {
       width: 100%; /* Full width create button in this context */
   }
   .contentListArea .scrollableBox {
        max-height: 150px;
    }
}